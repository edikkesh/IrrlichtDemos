// Written by Michael Zeilfelder, please check licenseHCraft.txt for the zlib-style license text.

#include "keycode_strings.h"

#include <map>

namespace
{
	#define MAP_KEY_STRING(x)  Map[x] = std::string(#x)
	#define MAP_STRING_KEY(x)  Map[std::string(#x)] = x

	struct StringsForKeys
	{
		std::map<irr::EKEY_CODE, std::string> Map;

		StringsForKeys()
		{
			using namespace irr;
			MAP_KEY_STRING(KEY_LBUTTON);
			MAP_KEY_STRING(KEY_RBUTTON);
			MAP_KEY_STRING(KEY_CANCEL);
			MAP_KEY_STRING(KEY_MBUTTON);
			MAP_KEY_STRING(KEY_XBUTTON1);
			MAP_KEY_STRING(KEY_XBUTTON2);
			MAP_KEY_STRING(KEY_BACK);
			MAP_KEY_STRING(KEY_TAB);
			MAP_KEY_STRING(KEY_CLEAR);
			MAP_KEY_STRING(KEY_RETURN);
			MAP_KEY_STRING(KEY_SHIFT);
			MAP_KEY_STRING(KEY_CONTROL);
			MAP_KEY_STRING(KEY_MENU);
			MAP_KEY_STRING(KEY_PAUSE);
			MAP_KEY_STRING(KEY_CAPITAL);
			MAP_KEY_STRING(KEY_KANA);
			MAP_KEY_STRING(KEY_HANGUEL);
			MAP_KEY_STRING(KEY_HANGUL);
			MAP_KEY_STRING(KEY_JUNJA);
			MAP_KEY_STRING(KEY_FINAL);
			MAP_KEY_STRING(KEY_HANJA);
			MAP_KEY_STRING(KEY_KANJI);
			MAP_KEY_STRING(KEY_ESCAPE);
			MAP_KEY_STRING(KEY_CONVERT);
			MAP_KEY_STRING(KEY_NONCONVERT);
			MAP_KEY_STRING(KEY_ACCEPT);
			MAP_KEY_STRING(KEY_MODECHANGE);
			MAP_KEY_STRING(KEY_SPACE);
			MAP_KEY_STRING(KEY_PRIOR);
			MAP_KEY_STRING(KEY_NEXT);
			MAP_KEY_STRING(KEY_END);
			MAP_KEY_STRING(KEY_HOME);
			MAP_KEY_STRING(KEY_LEFT);
			MAP_KEY_STRING(KEY_UP);
			MAP_KEY_STRING(KEY_RIGHT);
			MAP_KEY_STRING(KEY_DOWN);
			MAP_KEY_STRING(KEY_SELECT);
			MAP_KEY_STRING(KEY_PRINT);
			MAP_KEY_STRING(KEY_EXECUT);
			MAP_KEY_STRING(KEY_SNAPSHOT);
			MAP_KEY_STRING(KEY_INSERT);
			MAP_KEY_STRING(KEY_DELETE);
			MAP_KEY_STRING(KEY_HELP);
			MAP_KEY_STRING(KEY_KEY_0);
			MAP_KEY_STRING(KEY_KEY_1);
			MAP_KEY_STRING(KEY_KEY_2);
			MAP_KEY_STRING(KEY_KEY_3);
			MAP_KEY_STRING(KEY_KEY_4);
			MAP_KEY_STRING(KEY_KEY_5);
			MAP_KEY_STRING(KEY_KEY_6);
			MAP_KEY_STRING(KEY_KEY_7);
			MAP_KEY_STRING(KEY_KEY_8);
			MAP_KEY_STRING(KEY_KEY_9);
			MAP_KEY_STRING(KEY_KEY_A);
			MAP_KEY_STRING(KEY_KEY_B);
			MAP_KEY_STRING(KEY_KEY_C);
			MAP_KEY_STRING(KEY_KEY_D);
			MAP_KEY_STRING(KEY_KEY_E);
			MAP_KEY_STRING(KEY_KEY_F);
			MAP_KEY_STRING(KEY_KEY_G);
			MAP_KEY_STRING(KEY_KEY_H);
			MAP_KEY_STRING(KEY_KEY_I);
			MAP_KEY_STRING(KEY_KEY_J);
			MAP_KEY_STRING(KEY_KEY_K);
			MAP_KEY_STRING(KEY_KEY_L);
			MAP_KEY_STRING(KEY_KEY_M);
			MAP_KEY_STRING(KEY_KEY_N);
			MAP_KEY_STRING(KEY_KEY_O);
			MAP_KEY_STRING(KEY_KEY_P);
			MAP_KEY_STRING(KEY_KEY_Q);
			MAP_KEY_STRING(KEY_KEY_R);
			MAP_KEY_STRING(KEY_KEY_S);
			MAP_KEY_STRING(KEY_KEY_T);
			MAP_KEY_STRING(KEY_KEY_U);
			MAP_KEY_STRING(KEY_KEY_V);
			MAP_KEY_STRING(KEY_KEY_W);
			MAP_KEY_STRING(KEY_KEY_X);
			MAP_KEY_STRING(KEY_KEY_Y);
			MAP_KEY_STRING(KEY_KEY_Z);
			MAP_KEY_STRING(KEY_LWIN);
			MAP_KEY_STRING(KEY_RWIN);
			MAP_KEY_STRING(KEY_APPS);
			MAP_KEY_STRING(KEY_SLEEP);
			MAP_KEY_STRING(KEY_NUMPAD0);
			MAP_KEY_STRING(KEY_NUMPAD1);
			MAP_KEY_STRING(KEY_NUMPAD2);
			MAP_KEY_STRING(KEY_NUMPAD3);
			MAP_KEY_STRING(KEY_NUMPAD4);
			MAP_KEY_STRING(KEY_NUMPAD5);
			MAP_KEY_STRING(KEY_NUMPAD6);
			MAP_KEY_STRING(KEY_NUMPAD7);
			MAP_KEY_STRING(KEY_NUMPAD8);
			MAP_KEY_STRING(KEY_NUMPAD9);
			MAP_KEY_STRING(KEY_MULTIPLY);
			MAP_KEY_STRING(KEY_ADD);
			MAP_KEY_STRING(KEY_SEPARATOR);
			MAP_KEY_STRING(KEY_SUBTRACT);
			MAP_KEY_STRING(KEY_DECIMAL);
			MAP_KEY_STRING(KEY_DIVIDE);
			MAP_KEY_STRING(KEY_F1);
			MAP_KEY_STRING(KEY_F2);
			MAP_KEY_STRING(KEY_F3);
			MAP_KEY_STRING(KEY_F4);
			MAP_KEY_STRING(KEY_F5);
			MAP_KEY_STRING(KEY_F6);
			MAP_KEY_STRING(KEY_F7);
			MAP_KEY_STRING(KEY_F8);
			MAP_KEY_STRING(KEY_F9);
			MAP_KEY_STRING(KEY_F10);
			MAP_KEY_STRING(KEY_F11);
			MAP_KEY_STRING(KEY_F12);
			MAP_KEY_STRING(KEY_F13);
			MAP_KEY_STRING(KEY_F14);
			MAP_KEY_STRING(KEY_F15);
			MAP_KEY_STRING(KEY_F16);
			MAP_KEY_STRING(KEY_F17);
			MAP_KEY_STRING(KEY_F18);
			MAP_KEY_STRING(KEY_F19);
			MAP_KEY_STRING(KEY_F20);
			MAP_KEY_STRING(KEY_F21);
			MAP_KEY_STRING(KEY_F22);
			MAP_KEY_STRING(KEY_F23);
			MAP_KEY_STRING(KEY_F24);
			MAP_KEY_STRING(KEY_NUMLOCK);
			MAP_KEY_STRING(KEY_SCROLL);
			MAP_KEY_STRING(KEY_LSHIFT);
			MAP_KEY_STRING(KEY_RSHIFT);
			MAP_KEY_STRING(KEY_LCONTROL);
			MAP_KEY_STRING(KEY_RCONTROL);
			MAP_KEY_STRING(KEY_LMENU);
			MAP_KEY_STRING(KEY_RMENU);
			MAP_KEY_STRING(KEY_PLUS);
			MAP_KEY_STRING(KEY_COMMA);
			MAP_KEY_STRING(KEY_MINUS);
			MAP_KEY_STRING(KEY_PERIOD);
			MAP_KEY_STRING(KEY_ATTN);
			MAP_KEY_STRING(KEY_CRSEL);
			MAP_KEY_STRING(KEY_EXSEL);
			MAP_KEY_STRING(KEY_EREOF);
			MAP_KEY_STRING(KEY_PLAY);
			MAP_KEY_STRING(KEY_ZOOM);
			MAP_KEY_STRING(KEY_PA1);
			MAP_KEY_STRING(KEY_OEM_CLEAR);
		}
	};

	struct KeysForStrings
	{
		std::map<std::string, irr::EKEY_CODE> Map;

		KeysForStrings()
		{
			using namespace irr;
			MAP_STRING_KEY(KEY_LBUTTON);
			MAP_STRING_KEY(KEY_RBUTTON);
			MAP_STRING_KEY(KEY_CANCEL);
			MAP_STRING_KEY(KEY_MBUTTON);
			MAP_STRING_KEY(KEY_XBUTTON1);
			MAP_STRING_KEY(KEY_XBUTTON2);
			MAP_STRING_KEY(KEY_BACK);
			MAP_STRING_KEY(KEY_TAB);
			MAP_STRING_KEY(KEY_CLEAR);
			MAP_STRING_KEY(KEY_RETURN);
			MAP_STRING_KEY(KEY_SHIFT);
			MAP_STRING_KEY(KEY_CONTROL);
			MAP_STRING_KEY(KEY_MENU);
			MAP_STRING_KEY(KEY_PAUSE);
			MAP_STRING_KEY(KEY_CAPITAL);
			MAP_STRING_KEY(KEY_KANA);
			MAP_STRING_KEY(KEY_HANGUEL);
			MAP_STRING_KEY(KEY_HANGUL);
			MAP_STRING_KEY(KEY_JUNJA);
			MAP_STRING_KEY(KEY_FINAL);
			MAP_STRING_KEY(KEY_HANJA);
			MAP_STRING_KEY(KEY_KANJI);
			MAP_STRING_KEY(KEY_ESCAPE);
			MAP_STRING_KEY(KEY_CONVERT);
			MAP_STRING_KEY(KEY_NONCONVERT);
			MAP_STRING_KEY(KEY_ACCEPT);
			MAP_STRING_KEY(KEY_MODECHANGE);
			MAP_STRING_KEY(KEY_SPACE);
			MAP_STRING_KEY(KEY_PRIOR);
			MAP_STRING_KEY(KEY_NEXT);
			MAP_STRING_KEY(KEY_END);
			MAP_STRING_KEY(KEY_HOME);
			MAP_STRING_KEY(KEY_LEFT);
			MAP_STRING_KEY(KEY_UP);
			MAP_STRING_KEY(KEY_RIGHT);
			MAP_STRING_KEY(KEY_DOWN);
			MAP_STRING_KEY(KEY_SELECT);
			MAP_STRING_KEY(KEY_PRINT);
			MAP_STRING_KEY(KEY_EXECUT);
			MAP_STRING_KEY(KEY_SNAPSHOT);
			MAP_STRING_KEY(KEY_INSERT);
			MAP_STRING_KEY(KEY_DELETE);
			MAP_STRING_KEY(KEY_HELP);
			MAP_STRING_KEY(KEY_KEY_0);
			MAP_STRING_KEY(KEY_KEY_1);
			MAP_STRING_KEY(KEY_KEY_2);
			MAP_STRING_KEY(KEY_KEY_3);
			MAP_STRING_KEY(KEY_KEY_4);
			MAP_STRING_KEY(KEY_KEY_5);
			MAP_STRING_KEY(KEY_KEY_6);
			MAP_STRING_KEY(KEY_KEY_7);
			MAP_STRING_KEY(KEY_KEY_8);
			MAP_STRING_KEY(KEY_KEY_9);
			MAP_STRING_KEY(KEY_KEY_A);
			MAP_STRING_KEY(KEY_KEY_B);
			MAP_STRING_KEY(KEY_KEY_C);
			MAP_STRING_KEY(KEY_KEY_D);
			MAP_STRING_KEY(KEY_KEY_E);
			MAP_STRING_KEY(KEY_KEY_F);
			MAP_STRING_KEY(KEY_KEY_G);
			MAP_STRING_KEY(KEY_KEY_H);
			MAP_STRING_KEY(KEY_KEY_I);
			MAP_STRING_KEY(KEY_KEY_J);
			MAP_STRING_KEY(KEY_KEY_K);
			MAP_STRING_KEY(KEY_KEY_L);
			MAP_STRING_KEY(KEY_KEY_M);
			MAP_STRING_KEY(KEY_KEY_N);
			MAP_STRING_KEY(KEY_KEY_O);
			MAP_STRING_KEY(KEY_KEY_P);
			MAP_STRING_KEY(KEY_KEY_Q);
			MAP_STRING_KEY(KEY_KEY_R);
			MAP_STRING_KEY(KEY_KEY_S);
			MAP_STRING_KEY(KEY_KEY_T);
			MAP_STRING_KEY(KEY_KEY_U);
			MAP_STRING_KEY(KEY_KEY_V);
			MAP_STRING_KEY(KEY_KEY_W);
			MAP_STRING_KEY(KEY_KEY_X);
			MAP_STRING_KEY(KEY_KEY_Y);
			MAP_STRING_KEY(KEY_KEY_Z);
			MAP_STRING_KEY(KEY_LWIN);
			MAP_STRING_KEY(KEY_RWIN);
			MAP_STRING_KEY(KEY_APPS);
			MAP_STRING_KEY(KEY_SLEEP);
			MAP_STRING_KEY(KEY_NUMPAD0);
			MAP_STRING_KEY(KEY_NUMPAD1);
			MAP_STRING_KEY(KEY_NUMPAD2);
			MAP_STRING_KEY(KEY_NUMPAD3);
			MAP_STRING_KEY(KEY_NUMPAD4);
			MAP_STRING_KEY(KEY_NUMPAD5);
			MAP_STRING_KEY(KEY_NUMPAD6);
			MAP_STRING_KEY(KEY_NUMPAD7);
			MAP_STRING_KEY(KEY_NUMPAD8);
			MAP_STRING_KEY(KEY_NUMPAD9);
			MAP_STRING_KEY(KEY_MULTIPLY);
			MAP_STRING_KEY(KEY_ADD);
			MAP_STRING_KEY(KEY_SEPARATOR);
			MAP_STRING_KEY(KEY_SUBTRACT);
			MAP_STRING_KEY(KEY_DECIMAL);
			MAP_STRING_KEY(KEY_DIVIDE);
			MAP_STRING_KEY(KEY_F1);
			MAP_STRING_KEY(KEY_F2);
			MAP_STRING_KEY(KEY_F3);
			MAP_STRING_KEY(KEY_F4);
			MAP_STRING_KEY(KEY_F5);
			MAP_STRING_KEY(KEY_F6);
			MAP_STRING_KEY(KEY_F7);
			MAP_STRING_KEY(KEY_F8);
			MAP_STRING_KEY(KEY_F9);
			MAP_STRING_KEY(KEY_F10);
			MAP_STRING_KEY(KEY_F11);
			MAP_STRING_KEY(KEY_F12);
			MAP_STRING_KEY(KEY_F13);
			MAP_STRING_KEY(KEY_F14);
			MAP_STRING_KEY(KEY_F15);
			MAP_STRING_KEY(KEY_F16);
			MAP_STRING_KEY(KEY_F17);
			MAP_STRING_KEY(KEY_F18);
			MAP_STRING_KEY(KEY_F19);
			MAP_STRING_KEY(KEY_F20);
			MAP_STRING_KEY(KEY_F21);
			MAP_STRING_KEY(KEY_F22);
			MAP_STRING_KEY(KEY_F23);
			MAP_STRING_KEY(KEY_F24);
			MAP_STRING_KEY(KEY_NUMLOCK);
			MAP_STRING_KEY(KEY_SCROLL);
			MAP_STRING_KEY(KEY_LSHIFT);
			MAP_STRING_KEY(KEY_RSHIFT);
			MAP_STRING_KEY(KEY_LCONTROL);
			MAP_STRING_KEY(KEY_RCONTROL);
			MAP_STRING_KEY(KEY_LMENU);
			MAP_STRING_KEY(KEY_RMENU);
			MAP_STRING_KEY(KEY_PLUS);
			MAP_STRING_KEY(KEY_COMMA);
			MAP_STRING_KEY(KEY_MINUS);
			MAP_STRING_KEY(KEY_PERIOD);
			MAP_STRING_KEY(KEY_ATTN);
			MAP_STRING_KEY(KEY_CRSEL);
			MAP_STRING_KEY(KEY_EXSEL);
			MAP_STRING_KEY(KEY_EREOF);
			MAP_STRING_KEY(KEY_PLAY);
			MAP_STRING_KEY(KEY_ZOOM);
			MAP_STRING_KEY(KEY_PA1);
			MAP_STRING_KEY(KEY_OEM_CLEAR);
		}
	};
}

std::string IrrKeyToString(irr::EKEY_CODE key)
{
	static StringsForKeys str4keys;
	return str4keys.Map[key];
}

irr::EKEY_CODE StringToIrrKey(const std::string& keyname)
{
	static KeysForStrings key4str;
	return key4str.Map[keyname];
}
